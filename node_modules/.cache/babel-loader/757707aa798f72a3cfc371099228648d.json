{"remainingRequest":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\src\\permission.js","dependencies":[{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\src\\permission.js","mtime":1711087300000},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\babel.config.js","mtime":1710918909587},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710918915895},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\babel-loader\\lib\\index.js","mtime":1710918914227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9NZXNzYWdlMiBmcm9tICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9tZXNzYWdlLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX01lc3NhZ2UgZnJvbSAiZWxlbWVudC11aS9saWIvbWVzc2FnZSI7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi9yb3V0ZXInOwppbXBvcnQgc3RvcmUgZnJvbSAnLi9zdG9yZSc7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyCmltcG9ydCAnbnByb2dyZXNzL25wcm9ncmVzcy5jc3MnOyAvLyBwcm9ncmVzcyBiYXIgc3R5bGUKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOyAvLyBnZXQgdG9rZW4gZnJvbSBjb29raWUKCk5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCmNvbnN0IHdoaXRlTGlzdCA9IFsnL2xvZ2luJywgJy8nLCAnL2FwcE1haW5JbmRleCddOyAvLyBubyByZWRpcmVjdCB3aGl0ZWxpc3QKCnJvdXRlci5iZWZvcmVFYWNoKGFzeW5jICh0bywgZnJvbSwgbmV4dCkgPT4gewogIC8vIHN0YXJ0IHByb2dyZXNzIGJhcgogIE5Qcm9ncmVzcy5zdGFydCgpOwoKICAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgbG9nZ2VkIGluCiAgY29uc3QgaGFzVG9rZW4gPSBnZXRUb2tlbigpOwogIGlmIChoYXNUb2tlbikgewogICAgaWYgKHRvLnBhdGggPT09ICcvbG9naW4nKSB7CiAgICAgIC8vIGlmIGlzIGxvZ2dlZCBpbiwgcmVkaXJlY3QgdG8gdGhlIGhvbWUgcGFnZQogICAgICBuZXh0KCk7CiAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICB9IGVsc2UgewogICAgICAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgb2J0YWluZWQgaGlzIHBlcm1pc3Npb24gcm9sZXMgdGhyb3VnaCBnZXRJbmZvCiAgICAgIGNvbnN0IGhhc1JvbGVzID0gc3RvcmUuZ2V0dGVycy5yb2xlcyAmJiBzdG9yZS5nZXR0ZXJzLnJvbGVzLmxlbmd0aCA+IDA7CiAgICAgIGlmIChoYXNSb2xlcykgewogICAgICAgIGNvbnNvbGUubG9nKGhhc1JvbGVzKTsKICAgICAgICBuZXh0KCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIC8vIGdldCB1c2VyIGluZm8KICAgICAgICAgIC8vIG5vdGU6IHJvbGVzIG11c3QgYmUgYSBvYmplY3QgYXJyYXkhIHN1Y2ggYXM6IFsnYWRtaW4nXSBvciAsWydkZXZlbG9wZXInLCdlZGl0b3InXQogICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ0dldEluZm8nKTsKICAgICAgICAgIGNvbnN0IHJvbGVzID0gcmVzLmRhdGEucm9sZXM7CiAgICAgICAgICAvLyBnZW5lcmF0ZSBhY2Nlc3NpYmxlIHJvdXRlcyBtYXAgYmFzZWQgb24gcm9sZXMKICAgICAgICAgIGNvbnN0IGFjY2Vzc1JvdXRlcyA9IGF3YWl0IHN0b3JlLmRpc3BhdGNoKCdwZXJtaXNzaW9uL2dlbmVyYXRlUm91dGVzJywgcm9sZXMpOwoKICAgICAgICAgIC8vIGR5bmFtaWNhbGx5IGFkZCBhY2Nlc3NpYmxlIHJvdXRlcwoKICAgICAgICAgIC8vIHJvdXRlci5hZGRSb3V0ZXMoYWNjZXNzUm91dGVzKQoKICAgICAgICAgIG5leHQoewogICAgICAgICAgICAuLi50bywKICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZQogICAgICAgICAgfSk7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIC8vIHJlbW92ZSB0b2tlbiBhbmQgZ28gdG8gbG9naW4gcGFnZSB0byByZS1sb2dpbgogICAgICAgICAgYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ0ZlZExvZ091dCcpOwogICAgICAgICAgX01lc3NhZ2UuZXJyb3IoZXJyb3IgfHwgJ0hhcyBFcnJvcicpOwogICAgICAgICAgLy/ku6XliY3lhpnms5XvvIgxOee6p++8iQogICAgICAgICAgLy8gbmV4dChgL2xvZ2luP3JlZGlyZWN0PSR7dG8ucGF0aH1gKQogICAgICAgICAgLy8gbmV4dCh0by5wYXRoKQogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9IGVsc2UgewogICAgLyogaGFzIG5vIHRva2VuKi8KICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgLy8gaW4gdGhlIGZyZWUgbG9naW4gd2hpdGVsaXN0LCBnbyBkaXJlY3RseQogICAgICBuZXh0KCk7CiAgICB9IGVsc2UgewogICAgICAvLyBvdGhlciBwYWdlcyB0aGF0IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gYWNjZXNzIGFyZSByZWRpcmVjdGVkIHRvIHRoZSBsb2dpbiBwYWdlLgogICAgICBuZXh0KCk7CiAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICB9CiAgfQp9KTsKcm91dGVyLmFmdGVyRWFjaCgoKSA9PiB7CiAgLy8gZmluaXNoIHByb2dyZXNzIGJhcgogIE5Qcm9ncmVzcy5kb25lKCk7Cn0pOw=="},{"version":3,"names":["router","store","NProgress","getToken","configure","showSpinner","whiteList","beforeEach","to","from","next","start","hasToken","path","done","hasRoles","getters","roles","length","console","log","res","dispatch","data","accessRoutes","replace","error","_Message","indexOf","afterEach"],"sources":["C:/Users/DIO/Desktop/云统战/GDOUunited/src/permission.js"],"sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login', '/', '/appMainIndex'] // no redirect whitelist\n\nrouter.beforeEach(async (to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // determine whether the user has logged in\n  const hasToken = getToken()\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next()\n      NProgress.done()\n    } else {\n      // determine whether the user has obtained his permission roles through getInfo\n      const hasRoles = store.getters.roles && store.getters.roles.length > 0\n      if (hasRoles) {\n        console.log(hasRoles)\n        next()\n      } else {\n        try {\n          // get user info\n          // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\n          const res = await store.dispatch('GetInfo')\n          const roles = res.data.roles\n          // generate accessible routes map based on roles\n          const accessRoutes = await store.dispatch(\n            'permission/generateRoutes',\n            roles\n          )\n\n          // dynamically add accessible routes\n\n          // router.addRoutes(accessRoutes)\n\n          next({ ...to, replace: true })\n        } catch (error) {\n          // remove token and go to login page to re-login\n          await store.dispatch('FedLogOut')\n          Message.error(error || 'Has Error')\n          //以前写法（19级）\n          // next(`/login?redirect=${to.path}`)\n          // next(to.path)\n          console.log(error)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next()\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"],"mappings":";;;AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAOC,SAAS,MAAM,WAAW,EAAC;AAClC,OAAO,yBAAyB,EAAC;AACjC,SAASC,QAAQ,QAAQ,cAAc,EAAC;;AAExCD,SAAS,CAACE,SAAS,CAAC;EAAEC,WAAW,EAAE;AAAM,CAAC,CAAC,EAAC;;AAE5C,MAAMC,SAAS,GAAG,CAAC,QAAQ,EAAE,GAAG,EAAE,eAAe,CAAC,EAAC;;AAEnDN,MAAM,CAACO,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C;EACAR,SAAS,CAACS,KAAK,EAAE;;EAEjB;EACA,MAAMC,QAAQ,GAAGT,QAAQ,EAAE;EAC3B,IAAIS,QAAQ,EAAE;IACZ,IAAIJ,EAAE,CAACK,IAAI,KAAK,QAAQ,EAAE;MACxB;MACAH,IAAI,EAAE;MACNR,SAAS,CAACY,IAAI,EAAE;IAClB,CAAC,MAAM;MACL;MACA,MAAMC,QAAQ,GAAGd,KAAK,CAACe,OAAO,CAACC,KAAK,IAAIhB,KAAK,CAACe,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC;MACtE,IAAIH,QAAQ,EAAE;QACZI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;QACrBL,IAAI,EAAE;MACR,CAAC,MAAM;QACL,IAAI;UACF;UACA;UACA,MAAMW,GAAG,GAAG,MAAMpB,KAAK,CAACqB,QAAQ,CAAC,SAAS,CAAC;UAC3C,MAAML,KAAK,GAAGI,GAAG,CAACE,IAAI,CAACN,KAAK;UAC5B;UACA,MAAMO,YAAY,GAAG,MAAMvB,KAAK,CAACqB,QAAQ,CACvC,2BAA2B,EAC3BL,KAAK,CACN;;UAED;;UAEA;;UAEAP,IAAI,CAAC;YAAE,GAAGF,EAAE;YAAEiB,OAAO,EAAE;UAAK,CAAC,CAAC;QAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACd;UACA,MAAMzB,KAAK,CAACqB,QAAQ,CAAC,WAAW,CAAC;UACjCK,QAAA,CAAQD,KAAK,CAACA,KAAK,IAAI,WAAW,CAAC;UACnC;UACA;UACA;UACAP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;UAClBxB,SAAS,CAACY,IAAI,EAAE;QAClB;MACF;IACF;EACF,CAAC,MAAM;IACL;IACA,IAAIR,SAAS,CAACsB,OAAO,CAACpB,EAAE,CAACK,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACrC;MACAH,IAAI,EAAE;IACR,CAAC,MAAM;MACL;MACAA,IAAI,EAAE;MACNR,SAAS,CAACY,IAAI,EAAE;IAClB;EACF;AACF,CAAC,CAAC;AAEFd,MAAM,CAAC6B,SAAS,CAAC,MAAM;EACrB;EACA3B,SAAS,CAACY,IAAI,EAAE;AAClB,CAAC,CAAC"}]}