{"remainingRequest":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86198\\Desktop\\qianduantongzhan\\src\\views\\ums\\role\\allocResource.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\src\\views\\ums\\role\\allocResource.vue","mtime":1694958188000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\babel.config.js","mtime":1679218944000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IGZldGNoQWxsUmVzb3VyY2VMaXN0IH0gZnJvbSAnQC9hcGkvcmVzb3VyY2UnOwppbXBvcnQgeyBsaXN0QWxsQ2F0ZSB9IGZyb20gJ0AvYXBpL3Jlc291cmNlQ2F0ZWdvcnknOwppbXBvcnQgeyBhbGxvY1Jlc291cmNlLCBsaXN0UmVzb3VyY2VCeVJvbGUgfSBmcm9tICdAL2FwaS9yb2xlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJhbGxvY1Jlc291cmNlIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcm9sZUlkOiBudWxsLAogICAgICBhbGxSZXNvdXJjZTogbnVsbCwKICAgICAgYWxsUmVzb3VyY2VDYXRlOiBudWxsCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vIOS7jui3r+eUseS4reiOt+WPluinkuiJsklECiAgICB0aGlzLnJvbGVJZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnJvbGVJZDsKICAgIC8vIOiOt+WPluaJgOaciei1hOa6kOWIhuexuwogICAgdGhpcy5nZXRBbGxSZXNvdXJjZUNhdGVMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDojrflj5bmiYDmnInotYTmupDliJfooagKICAgIGdldEFsbFJlc291cmNlTGlzdCgpIHsKICAgICAgZmV0Y2hBbGxSZXNvdXJjZUxpc3QoKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICB0aGlzLmFsbFJlc291cmNlID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAvLyDliJ3lp4vljJbotYTmupDnmoTpgInkuK3nirbmgIEKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWxsUmVzb3VyY2UubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHRoaXMuYWxsUmVzb3VyY2VbaV0uY2hlY2tlZCA9IGZhbHNlOwogICAgICAgIH0KICAgICAgICAvLyDojrflj5bop5LoibLlt7LliIbphY3nmoTotYTmupAKICAgICAgICB0aGlzLmdldFJlc291cmNlQnlSb2xlKHRoaXMucm9sZUlkKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5omA5pyJ6LWE5rqQ5YiG57G75YiX6KGoCiAgICBnZXRBbGxSZXNvdXJjZUNhdGVMaXN0KCkgewogICAgICBsaXN0QWxsQ2F0ZSgpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMuYWxsUmVzb3VyY2VDYXRlID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAvLyDliJ3lp4vljJbotYTmupDliIbnsbvnmoTpgInkuK3nirbmgIEKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWxsUmVzb3VyY2VDYXRlLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB0aGlzLmFsbFJlc291cmNlQ2F0ZVtpXS5jaGVja2VkID0gZmFsc2U7CiAgICAgICAgfQogICAgICAgIC8vIOiOt+WPluaJgOaciei1hOa6kOWIl+ihqAogICAgICAgIHRoaXMuZ2V0QWxsUmVzb3VyY2VMaXN0KCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOagueaNrui1hOa6kOWIhuexu0lE6L+H5ruk6LWE5rqQ5pWw5o2uCiAgICBnZXRSZXNvdXJjZUJ5Q2F0ZShjYXRlZ29yeUlkKSB7CiAgICAgIGxldCBjYXRlUmVzb3VyY2UgPSBbXTsKICAgICAgaWYgKHRoaXMuYWxsUmVzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIG51bGw7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hbGxSZXNvdXJjZS5sZW5ndGg7IGkrKykgewogICAgICAgIGxldCByZXNvdXJjZSA9IHRoaXMuYWxsUmVzb3VyY2VbaV07CiAgICAgICAgaWYgKHJlc291cmNlLmNhdGVnb3J5SWQgPT09IGNhdGVnb3J5SWQpIHsKICAgICAgICAgIGNhdGVSZXNvdXJjZS5wdXNoKHJlc291cmNlKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIGNhdGVSZXNvdXJjZTsKICAgIH0sCiAgICAvLyDojrflj5bop5LoibLlt7LliIbphY3nmoTotYTmupAKICAgIGdldFJlc291cmNlQnlSb2xlKHJvbGVJZCkgewogICAgICBsaXN0UmVzb3VyY2VCeVJvbGUocm9sZUlkKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBsZXQgYWxsb2NSZXNvdXJjZSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgdGhpcy5hbGxSZXNvdXJjZS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgaXRlbS5jaGVja2VkID0gdGhpcy5nZXRSZXNvdXJjZUNoZWNrZWQoaXRlbS5pZCwgYWxsb2NSZXNvdXJjZSk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5hbGxSZXNvdXJjZUNhdGUuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgIGl0ZW0uY2hlY2tlZCA9IHRoaXMuaXNBbGxDaGVja2VkKGl0ZW0uaWQpOwogICAgICAgIH0pOwogICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOajgOafpei1hOa6kOaYr+WQpuW3sumAieS4rQogICAgZ2V0UmVzb3VyY2VDaGVja2VkKHJlc291cmNlSWQsIGFsbG9jUmVzb3VyY2UpIHsKICAgICAgaWYgKGFsbG9jUmVzb3VyY2UgPT0gbnVsbCB8fCBhbGxvY1Jlc291cmNlLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGZhbHNlOwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbG9jUmVzb3VyY2UubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoYWxsb2NSZXNvdXJjZVtpXS5pZCA9PT0gcmVzb3VyY2VJZCkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICAvLyDliKTmlq3otYTmupDliIbnsbvnmoTpgInkuK3nirbmgIHmmK/lkKbkuI3noa7lrpoKICAgIGlzSW5kZXRlcm1pbmF0ZShjYXRlZ29yeUlkKSB7CiAgICAgIGxldCBjYXRlUmVzb3VyY2VzID0gdGhpcy5nZXRSZXNvdXJjZUJ5Q2F0ZShjYXRlZ29yeUlkKTsKICAgICAgaWYgKGNhdGVSZXNvdXJjZXMgPT0gbnVsbCkgcmV0dXJuIGZhbHNlOwogICAgICBsZXQgY2hlY2tlZENvdW50ID0gMDsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjYXRlUmVzb3VyY2VzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKGNhdGVSZXNvdXJjZXNbaV0uY2hlY2tlZCA9PT0gdHJ1ZSkgewogICAgICAgICAgY2hlY2tlZENvdW50Kys7CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiAhKGNoZWNrZWRDb3VudCA9PT0gMCB8fCBjaGVja2VkQ291bnQgPT09IGNhdGVSZXNvdXJjZXMubGVuZ3RoKTsKICAgIH0sCiAgICAvLyDliKTmlq3otYTmupDliIbnsbvnmoTpgInkuK3nirbmgIHmmK/lkKblhajpg6jpgInkuK0KICAgIGlzQWxsQ2hlY2tlZChjYXRlZ29yeUlkKSB7CiAgICAgIGxldCBjYXRlUmVzb3VyY2VzID0gdGhpcy5nZXRSZXNvdXJjZUJ5Q2F0ZShjYXRlZ29yeUlkKTsKICAgICAgaWYgKGNhdGVSZXNvdXJjZXMgPT0gbnVsbCkgcmV0dXJuIGZhbHNlOwogICAgICBsZXQgY2hlY2tlZENvdW50ID0gMDsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjYXRlUmVzb3VyY2VzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKGNhdGVSZXNvdXJjZXNbaV0uY2hlY2tlZCA9PT0gdHJ1ZSkgewogICAgICAgICAgY2hlY2tlZENvdW50Kys7CiAgICAgICAgfQogICAgICB9CiAgICAgIGlmIChjaGVja2VkQ291bnQgPT09IDApIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgcmV0dXJuIGNoZWNrZWRDb3VudCA9PT0gY2F0ZVJlc291cmNlcy5sZW5ndGg7CiAgICB9LAogICAgLy8g5L+d5a2Y6LWE5rqQ5YiG6YWNCiAgICBoYW5kbGVTYXZlKCkgewogICAgICB0aGlzLiRjb25maXJtKCfmmK/lkKbliIbphY3otYTmupDvvJ8nLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgbGV0IGNoZWNrZWRSZXNvdXJjZUlkcyA9IG5ldyBTZXQoKTsKICAgICAgICBpZiAodGhpcy5hbGxSZXNvdXJjZSAhPSBudWxsICYmIHRoaXMuYWxsUmVzb3VyY2UubGVuZ3RoID4gMCkgewogICAgICAgICAgdGhpcy5hbGxSZXNvdXJjZS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICBpZiAoaXRlbS5jaGVja2VkKSB7CiAgICAgICAgICAgICAgY2hlY2tlZFJlc291cmNlSWRzLmFkZChpdGVtLmlkKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIGxldCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7CiAgICAgICAgcGFyYW1zLmFwcGVuZCgicm9sZUlkIiwgdGhpcy5yb2xlSWQpOwogICAgICAgIHBhcmFtcy5hcHBlbmQoInJlc291cmNlSWRzIiwgQXJyYXkuZnJvbShjaGVja2VkUmVzb3VyY2VJZHMpKTsKICAgICAgICAvLyDosIPnlKjlkI7nq69BUEnov5vooYzotYTmupDliIbphY0KICAgICAgICBhbGxvY1Jlc291cmNlKHBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+WIhumFjeaIkOWKnycsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgIH0pOwogICAgICAgICAgLy8g6L+U5Zue5LiK5LiA6aG1CiAgICAgICAgICB0aGlzLiRyb3V0ZXIuYmFjaygpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmuIXnqbrmiYDmnInpgInmi6kKICAgIGhhbmRsZUNsZWFyKCkgewogICAgICB0aGlzLmFsbFJlc291cmNlQ2F0ZS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgIGl0ZW0uY2hlY2tlZCA9IGZhbHNlOwogICAgICB9KTsKICAgICAgdGhpcy5hbGxSZXNvdXJjZS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgIGl0ZW0uY2hlY2tlZCA9IGZhbHNlOwogICAgICB9KTsKICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTsKICAgIH0sCiAgICAvLyDlpITnkIbotYTmupDliIbnsbvlhajpgInnirbmgIHlj5jljJYKICAgIGhhbmRsZUNoZWNrQWxsQ2hhbmdlKGNhdGUpIHsKICAgICAgbGV0IGNhdGVSZXNvdXJjZXMgPSB0aGlzLmdldFJlc291cmNlQnlDYXRlKGNhdGUuaWQpOwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNhdGVSZXNvdXJjZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBjYXRlUmVzb3VyY2VzW2ldLmNoZWNrZWQgPSBjYXRlLmNoZWNrZWQ7CiAgICAgIH0KICAgICAgdGhpcy4kZm9yY2VVcGRhdGUoKTsKICAgIH0sCiAgICAvLyDlpITnkIbotYTmupDlpI3pgInmoYbnirbmgIHlj5jljJYKICAgIGhhbmRsZUNoZWNrQ2hhbmdlKHJlc291cmNlKSB7CiAgICAgIHRoaXMuYWxsUmVzb3VyY2VDYXRlLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgaWYgKGl0ZW0uaWQgPT09IHJlc291cmNlLmNhdGVnb3J5SWQpIHsKICAgICAgICAgIGl0ZW0uY2hlY2tlZCA9IHRoaXMuaXNBbGxDaGVja2VkKHJlc291cmNlLmNhdGVnb3J5SWQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";AA6BA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;EACA;EACAC;IACA;IACAC;MACAC;QACA;QACA;QACA;UACA;QACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACAC;QACA;QACA;QACA;UACA;QACA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;QACA;QACA;UACAC;QACA;MACA;MACA;IACA;IACA;IACAC;MACAC;QACA;QACA;UACAC;QACA;QACA;UACAA;QACA;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;UACA;QACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACA;UACAC;QACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;QACA;UACAD;QACA;MACA;MACA;QACA;MACA;MACA;IACA;IACA;IACAE;MACA;QACAC;QACAC;QACAC;MACA;QACA;QACA;UACA;YACA;cACAC;YACA;UACA;QACA;QACA;QACAC;QACAA;QACA;QACAC;UACA;YACAC;YACAJ;YACAK;UACA;UACA;UACA;QACA;MACA;IACA;IACA;IACAC;MACA;QACAd;MACA;MACA;QACAA;MACA;MACA;IACA;IACA;IACAe;MACA;MACA;QACAC;MACA;MACA;IACA;IACA;IACAC;MACA;QACA;UACAjB;QACA;MACA;MACA;IACA;EACA;AACA","names":["name","data","roleId","allResource","allResourceCate","created","methods","getAllResourceList","fetchAllResourceList","getAllResourceCateList","listAllCate","getResourceByCate","cateResource","getResourceByRole","listResourceByRole","item","getResourceChecked","isIndeterminate","checkedCount","isAllChecked","handleSave","confirmButtonText","cancelButtonText","type","checkedResourceIds","params","allocResource","message","duration","handleClear","handleCheckAllChange","cateResources","handleCheckChange"],"sourceRoot":"src/views/ums/role","sources":["allocResource.vue"],"sourcesContent":["<template>\n  <!-- 使用Element UI的el-card组件创建卡片容器 -->\n  <el-card class=\"form-container\" shadow=\"never\">\n    <!-- 遍历资源分类 -->\n    <div class=\"table-\" v-for=\"(cate,index) in allResourceCate\" :class=\"index===0?'top-line':null\" :key=\"'cate'+cate.id\">\n      <!-- 创建资源分类的全选复选框 -->\n      <el-row class=\"table-layout\" style=\"background: #F2F6FC;\">\n        <el-checkbox v-model=\"cate.checked\" :indeterminate=\"isIndeterminate(cate.id)\" @change=\"handleCheckAllChange(cate)\">\n          {{cate.name}}\n        </el-checkbox>\n      </el-row>\n      <!-- 遍历资源并创建复选框 -->\n      <el-row class=\"table-layout\">\n        <el-col :span=\"8\" v-for=\"resource in getResourceByCate(cate.id)\" :key=\"resource.id\" style=\"padding: 4px 0\">\n          <el-checkbox v-model=\"resource.checked\" @change=\"handleCheckChange(resource)\">\n            {{resource.name}}\n          </el-checkbox>\n        </el-col>\n      </el-row>\n    </div>\n    <!-- 操作按钮区域 -->\n    <div style=\"margin-top: 20px\" align=\"center\">\n      <el-button type=\"primary\" @click=\"handleSave()\">保存</el-button>\n      <el-button @click=\"handleClear()\">清空</el-button>\n    </div>\n  </el-card>\n</template>\n\n<script>\nimport { fetchAllResourceList } from '@/api/resource';\nimport { listAllCate } from '@/api/resourceCategory';\nimport { allocResource, listResourceByRole } from '@/api/role';\n\nexport default {\n  name: \"allocResource\",\n  data () {\n    return {\n      roleId: null,\n      allResource: null,\n      allResourceCate: null\n    };\n  },\n  created () {\n    // 从路由中获取角色ID\n    this.roleId = this.$route.query.roleId;\n    // 获取所有资源分类\n    this.getAllResourceCateList();\n  },\n  methods: {\n    // 获取所有资源列表\n    getAllResourceList () {\n      fetchAllResourceList().then(response => {\n        this.allResource = response.data;\n        // 初始化资源的选中状态\n        for (let i = 0; i < this.allResource.length; i++) {\n          this.allResource[i].checked = false;\n        }\n        // 获取角色已分配的资源\n        this.getResourceByRole(this.roleId);\n      });\n    },\n    // 获取所有资源分类列表\n    getAllResourceCateList () {\n      listAllCate().then(response => {\n        this.allResourceCate = response.data;\n        // 初始化资源分类的选中状态\n        for (let i = 0; i < this.allResourceCate.length; i++) {\n          this.allResourceCate[i].checked = false;\n        }\n        // 获取所有资源列表\n        this.getAllResourceList();\n      });\n    },\n    // 根据资源分类ID过滤资源数据\n    getResourceByCate (categoryId) {\n      let cateResource = [];\n      if (this.allResource == null) return null;\n      for (let i = 0; i < this.allResource.length; i++) {\n        let resource = this.allResource[i];\n        if (resource.categoryId === categoryId) {\n          cateResource.push(resource);\n        }\n      }\n      return cateResource;\n    },\n    // 获取角色已分配的资源\n    getResourceByRole (roleId) {\n      listResourceByRole(roleId).then(response => {\n        let allocResource = response.data;\n        this.allResource.forEach(item => {\n          item.checked = this.getResourceChecked(item.id, allocResource);\n        });\n        this.allResourceCate.forEach(item => {\n          item.checked = this.isAllChecked(item.id);\n        });\n        this.$forceUpdate();\n      });\n    },\n    // 检查资源是否已选中\n    getResourceChecked (resourceId, allocResource) {\n      if (allocResource == null || allocResource.length === 0) return false;\n      for (let i = 0; i < allocResource.length; i++) {\n        if (allocResource[i].id === resourceId) {\n          return true;\n        }\n      }\n      return false;\n    },\n    // 判断资源分类的选中状态是否不确定\n    isIndeterminate (categoryId) {\n      let cateResources = this.getResourceByCate(categoryId);\n      if (cateResources == null) return false;\n      let checkedCount = 0;\n      for (let i = 0; i < cateResources.length; i++) {\n        if (cateResources[i].checked === true) {\n          checkedCount++;\n        }\n      }\n      return !(checkedCount === 0 || checkedCount === cateResources.length);\n    },\n    // 判断资源分类的选中状态是否全部选中\n    isAllChecked (categoryId) {\n      let cateResources = this.getResourceByCate(categoryId);\n      if (cateResources == null) return false;\n      let checkedCount = 0;\n      for (let i = 0; i < cateResources.length; i++) {\n        if (cateResources[i].checked === true) {\n          checkedCount++;\n        }\n      }\n      if (checkedCount === 0) {\n        return false;\n      }\n      return checkedCount === cateResources.length;\n    },\n    // 保存资源分配\n    handleSave () {\n      this.$confirm('是否分配资源？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let checkedResourceIds = new Set();\n        if (this.allResource != null && this.allResource.length > 0) {\n          this.allResource.forEach(item => {\n            if (item.checked) {\n              checkedResourceIds.add(item.id);\n            }\n          });\n        }\n        let params = new URLSearchParams();\n        params.append(\"roleId\", this.roleId);\n        params.append(\"resourceIds\", Array.from(checkedResourceIds));\n        // 调用后端API进行资源分配\n        allocResource(params).then(response => {\n          this.$message({\n            message: '分配成功',\n            type: 'success',\n            duration: 1000\n          });\n          // 返回上一页\n          this.$router.back();\n        })\n      })\n    },\n    // 清空所有选择\n    handleClear () {\n      this.allResourceCate.forEach(item => {\n        item.checked = false;\n      });\n      this.allResource.forEach(item => {\n        item.checked = false;\n      });\n      this.$forceUpdate();\n    },\n    // 处理资源分类全选状态变化\n    handleCheckAllChange (cate) {\n      let cateResources = this.getResourceByCate(cate.id);\n      for (let i = 0; i < cateResources.length; i++) {\n        cateResources[i].checked = cate.checked;\n      }\n      this.$forceUpdate();\n    },\n    // 处理资源复选框状态变化\n    handleCheckChange (resource) {\n      this.allResourceCate.forEach(item => {\n        if (item.id === resource.categoryId) {\n          item.checked = this.isAllChecked(resource.categoryId);\n        }\n      });\n      this.$forceUpdate();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.table-layout {\n  padding: 20px;\n  border-left: 1px solid #dcdfe6;\n  border-right: 1px solid #dcdfe6;\n  border-bottom: 1px solid #dcdfe6;\n}\n\n.top-line {\n  border-top: 1px solid #dcdfe6;\n}\n/* .table- {\n  display: block;\n  margin: 60px;\n}\n.form-container {\n  height: 700px;\n  display: block;\n} */\n</style>\n"]}]}