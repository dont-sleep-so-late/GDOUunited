{"remainingRequest":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\src\\views\\ums\\role\\allocMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\src\\views\\ums\\role\\allocMenu.vue","mtime":1712845525807},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710918915895},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\babel-loader\\lib\\index.js","mtime":1710918914227},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710918915895},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\vue-loader\\lib\\index.js","mtime":1710918931244}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGZldGNoVHJlZUxpc3QgfSBmcm9tICdAL2FwaS9tZW51JzsKaW1wb3J0IHsgbGlzdE1lbnVCeVJvbGUsIGFsbG9jTWVudSB9IGZyb20gJ0AvYXBpL3JvbGUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJhbGxvY01lbnUiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZW51VHJlZUxpc3Q6IFtdLAogICAgICBkZWZhdWx0UHJvcHM6IHsKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgICBsYWJlbDogJ3RpdGxlJwogICAgICB9LAogICAgICByb2xlSWQ6IG51bGwKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5yb2xlSWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5yb2xlSWQ7CiAgICB0aGlzLnRyZWVMaXN0KCk7CiAgICB0aGlzLmdldFJvbGVNZW51KHRoaXMucm9sZUlkKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHRyZWVMaXN0KCkgewogICAgICBmZXRjaFRyZWVMaXN0KCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5tZW51VHJlZUxpc3QgPSByZXNwb25zZS5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRSb2xlTWVudShyb2xlSWQpIHsKICAgICAgbGlzdE1lbnVCeVJvbGUocm9sZUlkKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBsZXQgbWVudUxpc3QgPSByZXNwb25zZS5kYXRhOwogICAgICAgIGxldCBjaGVja2VkTWVudUlkcyA9IFtdOwogICAgICAgIGlmIChtZW51TGlzdCAhPSBudWxsICYmIG1lbnVMaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWVudUxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgbGV0IG1lbnUgPSBtZW51TGlzdFtpXTsKICAgICAgICAgICAgLy8g5bCG5omA5pyJ6I+c5Y2VSUTmt7vliqDliLBjaGVja2VkTWVudUlkc+S4re+8jOWMheaLrOS4gOe6p+iPnOWNlQogICAgICAgICAgICBjaGVja2VkTWVudUlkcy5wdXNoKG1lbnUuaWQpOwogICAgICAgICAgICAvLyDlpoLmnpzlrZjlnKjniLZJRO+8jOS5n+WwhuWFtua3u+WKoOWIsGNoZWNrZWRNZW51SWRz5LitCiAgICAgICAgICAgIGlmIChtZW51LnBhcmVudElkICE9PSAwKSB7CiAgICAgICAgICAgICAgY2hlY2tlZE1lbnVJZHMucHVzaChtZW51LnBhcmVudElkKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvLyDkvb/nlKhTZXTmnaXljrvpmaTph43lpI3nmoRJRAogICAgICAgIGxldCB1bmlxdWVDaGVja2VkTWVudUlkcyA9IG5ldyBTZXQoY2hlY2tlZE1lbnVJZHMpOwogICAgICAgIHRoaXMuJHJlZnMudHJlZS5zZXRDaGVja2VkS2V5cyhBcnJheS5mcm9tKHVuaXF1ZUNoZWNrZWRNZW51SWRzKSk7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVNhdmUoKSB7CiAgICAgIGxldCBjaGVja2VkTm9kZXMgPSB0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZE5vZGVzKCk7CiAgICAgIGxldCBjaGVja2VkTWVudUlkcyA9IG5ldyBTZXQoKTsKICAgICAgaWYgKGNoZWNrZWROb2RlcyAhPSBudWxsICYmIGNoZWNrZWROb2Rlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGVja2VkTm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGxldCBjaGVja2VkTm9kZSA9IGNoZWNrZWROb2Rlc1tpXTsKICAgICAgICAgIGNoZWNrZWRNZW51SWRzLmFkZChjaGVja2VkTm9kZS5pZCk7CiAgICAgICAgICBpZiAoY2hlY2tlZE5vZGUucGFyZW50SWQgIT09IDApIHsKICAgICAgICAgICAgY2hlY2tlZE1lbnVJZHMuYWRkKGNoZWNrZWROb2RlLnBhcmVudElkKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy4kY29uZmlybSgn5piv5ZCm5YiG6YWN6I+c5Y2V77yfJywgJ+aPkOekuicsIHsKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgIGxldCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7CiAgICAgICAgcGFyYW1zLmFwcGVuZCgicm9sZUlkIiwgdGhpcy5yb2xlSWQpOwogICAgICAgIHBhcmFtcy5hcHBlbmQoIm1lbnVJZHMiLCBBcnJheS5mcm9tKGNoZWNrZWRNZW51SWRzKSk7CiAgICAgICAgYWxsb2NNZW51KHBhcmFtcykudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+WIhumFjeaIkOWKnycsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgZHVyYXRpb246IDEwMDAKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy4kcm91dGVyLmJhY2soKTsKICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIGhhbmRsZUNsZWFyKCkgewogICAgICB0aGlzLiRyZWZzLnRyZWUuc2V0Q2hlY2tlZEtleXMoW10pOwogICAgfQogIH0KfQo="},{"version":3,"sources":["allocMenu.vue"],"names":[],"mappings":";AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"allocMenu.vue","sourceRoot":"src/views/ums/role","sourcesContent":["<template>\n  <el-card class=\"form-container\" shadow=\"never\">\n    <el-tree :data=\"menuTreeList\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree\" highlight-current\n      :props=\"defaultProps\">\n    </el-tree>\n    <div style=\"margin-top: 20px\" align=\"center\">\n      <el-button type=\"primary\" @click=\"handleSave()\">保存</el-button>\n      <el-button @click=\"handleClear()\">清空</el-button>\n    </div>\n\n  </el-card>\n</template>\n\n<script>\nimport { fetchTreeList } from '@/api/menu';\nimport { listMenuByRole, allocMenu } from '@/api/role';\n\nexport default {\n  name: \"allocMenu\",\n  data() {\n    return {\n      menuTreeList: [],\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      },\n      roleId: null\n    };\n  },\n  created() {\n    this.roleId = this.$route.query.roleId;\n    this.treeList();\n    this.getRoleMenu(this.roleId);\n  },\n  methods: {\n    treeList() {\n      fetchTreeList().then(response => {\n        this.menuTreeList = response.data;\n      });\n    },\n    getRoleMenu(roleId) {\n      listMenuByRole(roleId).then(response => {\n        let menuList = response.data;\n        let checkedMenuIds = [];\n        if (menuList != null && menuList.length > 0) {\n          for (let i = 0; i < menuList.length; i++) {\n            let menu = menuList[i];\n            // 将所有菜单ID添加到checkedMenuIds中，包括一级菜单\n            checkedMenuIds.push(menu.id);\n            // 如果存在父ID，也将其添加到checkedMenuIds中\n            if (menu.parentId !== 0) {\n              checkedMenuIds.push(menu.parentId);\n            }\n          }\n        }\n        // 使用Set来去除重复的ID\n        let uniqueCheckedMenuIds = new Set(checkedMenuIds);\n        this.$refs.tree.setCheckedKeys(Array.from(uniqueCheckedMenuIds));\n      });\n    },\n    handleSave() {\n      let checkedNodes = this.$refs.tree.getCheckedNodes();\n      let checkedMenuIds = new Set();\n      if (checkedNodes != null && checkedNodes.length > 0) {\n        for (let i = 0; i < checkedNodes.length; i++) {\n          let checkedNode = checkedNodes[i];\n          checkedMenuIds.add(checkedNode.id);\n          if (checkedNode.parentId !== 0) {\n            checkedMenuIds.add(checkedNode.parentId);\n          }\n        }\n      }\n      this.$confirm('是否分配菜单？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        let params = new URLSearchParams();\n        params.append(\"roleId\", this.roleId);\n        params.append(\"menuIds\", Array.from(checkedMenuIds));\n        allocMenu(params).then(response => {\n          this.$message({\n            message: '分配成功',\n            type: 'success',\n            duration: 1000\n          });\n          this.$router.back();\n        })\n      })\n    },\n    handleClear() {\n      this.$refs.tree.setCheckedKeys([]);\n    }\n  }\n}\n</script>\n\n<style scoped></style>\n"]}]}