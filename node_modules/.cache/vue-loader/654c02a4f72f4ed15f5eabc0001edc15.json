{"remainingRequest":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\86198\\Desktop\\qianduantongzhan\\src\\pages\\teacher\\list.vue?vue&type=template&id=74ae73af&scoped=true&","dependencies":[{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\src\\pages\\teacher\\list.vue","mtime":1709116415779},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1655712170000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\86198\\Desktop\\qianduantongzhan\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}