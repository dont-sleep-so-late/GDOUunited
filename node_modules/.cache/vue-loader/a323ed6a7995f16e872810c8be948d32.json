{"remainingRequest":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\src\\pages\\teacher\\list.vue?vue&type=template&id=74ae73af&scoped=true&","dependencies":[{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\src\\pages\\teacher\\list.vue","mtime":1711087300000},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710918915895},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710918915895},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\babel-loader\\lib\\index.js","mtime":1710918914227},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1710918931246},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1710918915895},{"path":"C:\\Users\\DIO\\Desktop\\云统战\\GDOUunited\\node_modules\\vue-loader\\lib\\index.js","mtime":1710918931244}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}